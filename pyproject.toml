[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spec-to-pack-studio"
version = "0.1.0"
description = "Generate high-quality engineering document packs from structured product specs"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Fodezy", email = "noreply@github.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "click>=8.1.0",
    "pydantic>=2.0.0",
    "jinja2>=3.1.0",
    "jsonschema>=4.17.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "mypy>=1.5.0",
]
rag = [
    # Search engines
    "duckduckgo-search>=3.9.0",
    "requests>=2.31.0",
    
    # Dual Model Embeddings
    "sentence-transformers>=2.2.0",
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "numpy>=1.24.0",
    
    # Text Processing
    "tiktoken>=0.5.0",
    "langdetect>=1.0.9",
    
    # Web scraping and browser automation
    "playwright>=1.40.0",
    
    # Vector stores (from M4.E1)
    "lancedb>=0.3.0",
    "qdrant-client>=1.6.0",
]

[project.scripts]
studiogen = "studio.cli:main"

[project.urls]
Homepage = "https://github.com/Fodezy/Spec-to-Pack"
Repository = "https://github.com/Fodezy/Spec-to-Pack.git"
Issues = "https://github.com/Fodezy/Spec-to-Pack/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88
target-version = "py311"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests (may require external services)",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true