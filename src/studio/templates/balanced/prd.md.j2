# Product Requirements Document: {{ meta.name }}

**Version:** {{ meta.version }}
**Generated:** {{ generated_at }}
**Template:** balanced-1.0.0

## Executive Summary

{{ problem.statement }}

{% if problem.context %}
### Context
{{ problem.context }}
{% endif %}

{% if problem.get('value_hypothesis') %}
### Value Hypothesis
{{ problem.value_hypothesis }}
{% endif %}

{% if research_available %}
### Research Summary
{{ research_evidence.summary }}
{% endif %}

## Goals & Objectives

### Primary Goals
{% if problem.statement %}
- Address core problem: {{ problem.statement }}
{% endif %}
{% if problem.get('value_hypothesis') %}
- Deliver value: {{ problem.value_hypothesis }}
{% endif %}

### Success Metrics
{% if success_metrics.metrics %}
{% for metric in success_metrics.metrics %}
- {{ metric }}
{% endfor %}
{% else %}
- User satisfaction > 80%
- Performance meets SLA requirements
{% endif %}

{% if problem.get('non_goals') %}
### Non-Goals
{% for non_goal in problem.non_goals %}
- {{ non_goal }}
{% endfor %}
{% endif %}

## Functional Requirements

### Core Features
{% if diagram_scope.get('user_flows') %}
{% for flow in diagram_scope.user_flows %}
- **{{ flow }}**: User can successfully complete {{ flow }} workflow
{% endfor %}
{% else %}
- Core functionality as defined in problem statement
{% endif %}

### API Requirements
{% if contracts_data.get('api_style') %}
- **API Style**: {{ contracts_data.api_style }}
{% endif %}
{% if diagram_scope.get('include_sequence') %}
- Sequence diagrams define interaction patterns
{% endif %}

## Non-Functional Requirements

### Performance
{% if success_metrics.get('nfr_budgets') %}
{% for nfr in success_metrics.nfr_budgets %}
- {{ nfr }}
{% endfor %}
{% else %}
- Response time < 2 seconds for core operations
- 99.9% uptime SLA
{% endif %}

### Security & Compliance
{% if compliance_context and compliance_context.get('privacy_reqs') %}
- Compliance requirements: {{ compliance_context.privacy_reqs | join(', ') }}
{% endif %}

## Acceptance Criteria

{% if test_strategy.get('bdd_journeys') %}
{% for journey in test_strategy.bdd_journeys %}
### {{ journey }}
- **Given** the system is in a valid state
- **When** user performs {{ journey }}
- **Then** the expected outcome is achieved
{% endfor %}
{% else %}
### Core Functionality
- **Given** a valid user request
- **When** the system processes the request
- **Then** the expected result is returned
{% endif %}

{% if research_available %}
## Evidence & Market Analysis

{% if research_evidence.market_evidence %}
### Market Evidence
{% for evidence in research_evidence.market_evidence %}
{{ evidence.content }}

*Source: [{{ evidence.source }}]({{ evidence.source }}) (Citation {{ evidence.citation_id }})*

{% endfor %}
{% endif %}

{% if research_evidence.technical_evidence %}
### Technical Evidence
{% for evidence in research_evidence.technical_evidence %}
{{ evidence.content }}

*Source: [{{ evidence.source }}]({{ evidence.source }}) (Citation {{ evidence.citation_id }})*

{% endfor %}
{% endif %}

{% if research_evidence.competitive_evidence %}
### Competitive Analysis
{% for evidence in research_evidence.competitive_evidence %}
{{ evidence.content }}

*Source: [{{ evidence.source }}]({{ evidence.source }}) (Citation {{ evidence.citation_id }})*

{% endfor %}
{% endif %}

### Research Methodology
- **Sources:** {{ research_methodology.sources_count }} documents from {{ research_methodology.unique_domains }} unique domains
- **Collection:** {{ research_methodology.data_collection }}
- **Analysis:** {{ research_methodology.analysis_method }}
- **Limitations:** {{ research_methodology.limitations }}

{% endif %}

## Open Questions

{% if risks_open_questions and risks_open_questions.get('open_questions') %}
{% for question in risks_open_questions.open_questions %}
- {{ question }}
{% endfor %}
{% else %}
- Implementation approach for complex features
- Integration strategy with existing systems
{% endif %}

## Dependencies & Constraints

### Budget Constraints
- **Tokens**: {{ constraints.budget_tokens }}
- **Duration**: {{ constraints.max_duration_minutes }} minutes
- **Offline**: {{ "Required" if constraints.offline_ok else "Not required" }}

### Technical Constraints
{% if problem.get('constraints') %}
{% for constraint in problem.constraints %}
- {{ constraint }}
{% endfor %}
{% endif %}

{% if research_available and research_evidence.citations %}
## References

{% for citation in research_evidence.citations %}
{{ citation.id }}. [{{ citation.title }}]({{ citation.url }})  
   Retrieved: {{ citation.retrieved_at }}  
   Snippet: {{ citation.snippet }}

{% endfor %}
{% endif %}

---

*Generated by Spec-to-Pack Studio*  
*Run ID: {{ run_id }}*
{% if research_available %}*Research-augmented with {{ research_evidence.citations|length }} sources*{% endif %}